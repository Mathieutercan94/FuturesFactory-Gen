{"ast":null,"code":"var _jsxFileName = \"/home/tercan/Documents/Stage/FuturesFactory-Gen/test/src/Component/import_button.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FileUploadPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.state = {\n      image: null\n    };\n    this.fileInput = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.image !== this.state.image) {\n      console.log('image = ', this.state.image, 'caca');\n    }\n  }\n\n  async handleSubmit(event) {\n    try {\n      event.preventDefault();\n\n      if (!this.fileInput.current.files[0].name) {\n        return alert('No file selected');\n      } else {\n        let formdata = new FormData();\n        formdata.append(\"NFT\", this.fileInput.current.files[0], this.fileInput.current.files[0].name);\n        let requestOptions = {\n          method: 'POST',\n          body: formdata,\n          redirect: 'follow',\n          cache: 'no-cache'\n        };\n        let res = await fetch(\"http://localhost:8080/api/create\", requestOptions);\n        const blob = await res.blob();\n        const url = URL.createObjectURL(blob);\n        this.setState({\n          image: url\n        });\n      }\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choisir la texture:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            ref: this.fileInput,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n/*Faire un cpmposant qui prend en props un .obj et un .png et afficher soit l'un soit l'autre*/","map":{"version":3,"sources":["/home/tercan/Documents/Stage/FuturesFactory-Gen/test/src/Component/import_button.js"],"names":["React","FileUploadPage","Component","constructor","props","handleSubmit","bind","state","image","fileInput","createRef","componentDidUpdate","prevProps","prevState","console","log","event","preventDefault","current","files","name","alert","formdata","FormData","append","requestOptions","method","body","redirect","cache","res","fetch","blob","url","URL","createObjectURL","setState","e","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAb;AACA,SAAKC,SAAL,gBAAiBT,KAAK,CAACU,SAAN,EAAjB;AACH;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACrC,QAAIA,SAAS,CAACL,KAAV,KAAoB,KAAKD,KAAL,CAAWC,KAAnC,EAA0C;AACtCM,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuB,KAAKR,KAAL,CAAWC,KAAlC,EAAyC,MAAzC;AACH;AACJ;;AAEiB,QAAZH,YAAY,CAACW,KAAD,EAAQ;AACtB,QAAI;AACJA,MAAAA,KAAK,CAACC,cAAN;;AACA,UAAI,CAAC,KAAKR,SAAL,CAAeS,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgCC,IAArC,EAA2C;AACrC,eAAQC,KAAK,CAAC,kBAAD,CAAb;AACL,OAFD,MAEO;AACH,YAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuB,KAAKf,SAAL,CAAeS,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,CAAvB,EAAwD,KAAKV,SAAL,CAAeS,OAAf,CAAuBC,KAAvB,CAA6B,CAA7B,EAAgCC,IAAxF;AAEA,YAAIK,cAAc,GAAG;AACjBC,UAAAA,MAAM,EAAE,MADS;AAEjBC,UAAAA,IAAI,EAAEL,QAFW;AAGjBM,UAAAA,QAAQ,EAAE,QAHO;AAIjBC,UAAAA,KAAK,EAAE;AAJU,SAArB;AAOA,YAAIC,GAAG,GAAG,MAAMC,KAAK,CAAC,kCAAD,EAAqCN,cAArC,CAArB;AACA,cAAMO,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAJ,EAAnB;AACA,cAAMC,GAAG,GAAGC,GAAG,CAACC,eAAJ,CAAoBH,IAApB,CAAZ;AACA,aAAKI,QAAL,CAAc;AAAC5B,UAAAA,KAAK,EAAEyB;AAAR,SAAd;AAEH;AACD,KArBA,CAsBA,OAAMI,CAAN,EAAS;AACLhB,MAAAA,KAAK,CAACgB,CAAD,CAAL;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACA;AAAM,QAAA,QAAQ,EAAE,KAAKjC,YAArB;AAAA,gCACI;AAAA,yDAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,GAAG,EAAE,KAAKI,SAA7B;AAAwC,YAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAUI;AAAK,QAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC;AAArB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AA1DuD;AA4D5D","sourcesContent":["import React from 'react';\n\nexport default class FileUploadPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = { image: null  };\n        this.fileInput = React.createRef();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.image !== this.state.image) {\n            console.log('image = ',this.state.image, 'caca')\n        }\n    }\n\n    async handleSubmit(event) {\n        try {\n        event.preventDefault();\n        if (!this.fileInput.current.files[0].name) {\n              return  alert('No file selected')\n        } else {\n            let formdata = new FormData();\n            formdata.append(\"NFT\", this.fileInput.current.files[0], this.fileInput.current.files[0].name);\n\n            let requestOptions = {\n                method: 'POST',\n                body: formdata,\n                redirect: 'follow',\n                cache: 'no-cache',\n            };\n\n            let res = await fetch(\"http://localhost:8080/api/create\", requestOptions)\n            const blob = await res.blob()\n            const url = URL.createObjectURL(blob);\n            this.setState({image: url})\n\n        }\n       }\n        catch(e) {\n            alert(e)\n        }\n    }\n\n    render() {\n        return (\n            <div>\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    Choisir la texture:\n                    <input type=\"file\" ref={this.fileInput} alt=\"\" />\n                </label>\n                <br/>\n                    <button type=\"submit\">Envoyer</button>\n\n            </form>\n                <img src={this.state.image} />\n\n            </div>\n        );\n    }\n}\n/*Faire un cpmposant qui prend en props un .obj et un .png et afficher soit l'un soit l'autre*/\n\n"]},"metadata":{},"sourceType":"module"}